 #include 'totvs.ch'

//@see https://tdn.totvs.com.br/display/public/framework/FWTemporaryTable

Function U_ARQTEMP

 Local oTempTable as object
 Local cAliasTemp as character
 Local cRealName  as character

 rpcSetEnv('99','01')
 
 cAliasTemp := 'TableTemp'// setando um alias

 // instanciando a classe fwTemporaryTable e passando o alias a ser utilizado pela tabela
 oTempTable := fwTemporaryTable():new(cAliasTemp)

 // definindo os campos da estrutura utilizando o método SetFields
 oTempTable:SetFields({{"ENTIDADE","C",3,0}, {"CODIGO","C",6,0},{"LOJA","C",2,0},{"NOME","C",30,0}})

 // adicionando um indice a tabela utilizando o método addIndex
 oTempTable:addIndex("IND_1",{"CODIGO","LOJA","ENTIDADE"})

 // método responsavel pela criação da tabela
 oTempTable:create()

 // retorna o nome com o qual a tabela foi criada no BD
 cRealName := oTempTable:getRealName()

 dbSelectArea('SA1')
 dbSetOrder(1)

 While .not. eof()
    (cAliasTemp)->(reclock(alias(),.T.), CODIGO := SA1->A1_COD, LOJA := SA1->A1_LOJA, NOME := SA1->A1_NOME, ENTIDADE := SA1->(alias()), msunlock())
    dbSkip()
 Enddo


 dbSelectArea('SA2')
 dbSetOrder(1)

 While .not. eof()
    (cAliasTemp)->(reclock(alias(),.T.), CODIGO := SA2->A2_COD, LOJA := SA2->A2_LOJA, NOME := SA2->A2_NOME, ENTIDADE := SA2->(alias()), msunlock())
    dbSkip()
 Enddo


 cTxt := "ENTIDADE;CODIGO;LOJA;NOME"

 (cAliasTemp)->(dbSetOrder(1),dbEval({|| cTxt += CRLF + ENTIDADE + ';' + CODIGO + ';' + LOJA + ';' + NOME}))

 cArquivo := "C:\TOTVS\ListaEntidades.csv"
 lArquivo := memoWrite(cArquivo,cTxt)

 (cAliasTemp)->(dbCloseArea())

 oTempTable:delete()// método responsavel por efetuar a exclusão da tabela, e fechar o alias
  
 rpcClearEnv()

Return
